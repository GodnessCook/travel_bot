import os
import requests
import datetime
import math
from telegram import (
    Update, InlineKeyboardButton, InlineKeyboardMarkup,
    KeyboardButton, ReplyKeyboardMarkup
)
from telegram.ext import (
    Application, CommandHandler, CallbackQueryHandler,
    MessageHandler, filters, ContextTypes
)
from dotenv import load_dotenv

load_dotenv()
TOKEN = os.getenv("BOT_TOKEN")

# --- –ö—É—Ä—Å—ã ---
CNY_TO_UZS = 1700
CNY_TO_USD = 0.14

# --- –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –¥–ª—è "–ì–¥–µ —è —Å–µ–π—á–∞—Å?" ---
locations = {
    "Dadonghai": (18.2272, 109.5167),
    "SanyaBay": (18.2369, 109.4517),
    "YalongBay": (18.2333, 109.6333),
    "Wuzhizhou": (18.3139, 109.7958),
    "MonkeyIsland": (18.4080, 109.7790),
    "Nanshan": (18.3011, 109.2067),
    "Tianya": (18.2992, 109.3606),
    "RomancePark": (18.2803, 109.5053),
    "Yanoda": (18.5100, 109.7000),
    "Atlantis": (18.3040, 109.7970),
    "PhoenixIsland": (18.2267, 109.5097),
}

# --- –î–∞–Ω–Ω—ã–µ –ø–æ –¥–Ω—è–º ---
days = {
    1: {
        "title": "–î–µ–Ω—å 1 ‚Äî –î–∞–¥—É–Ω—Ö–∞–π –∏ –°–∞–Ω—å—è –ë—ç–π",
        "schedule": [
            "09:00 ‚Äì –≤—ã—Ö–æ–¥ –∏–∑ –æ—Ç–µ–ª—è",
            "09:10 ‚Äì –ø–ª—è–∂ –î–∞–¥—É–Ω—Ö–∞–π (–ø–µ—à–∫–æ–º 10 –º–∏–Ω)",
            "12:00 ‚Äì –æ–±–µ–¥ –≤ –∫–∞—Ñ–µ (~60‚Äì100 CNY)",
            "16:00 ‚Äì —Ç–∞–∫—Å–∏ –≤ –°–∞–Ω—å—è –ë—ç–π (~20 CNY, 20 –º–∏–Ω)",
            "20:00 ‚Äì –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –≤ –æ—Ç–µ–ª—å"
        ],
        "cafes": ["Dadonghai Cafe (~60 CNY)", "Seafood Grill (~100 CNY)"],
        "budget": {"taxi": 20, "food": 150, "tickets": 0},
        "checklist": ["–ü–∞—Å–ø–æ—Ä—Ç", "–ö—É–ø–∞–ª—å–Ω–∏–∫", "–°–æ–ª–Ω—Ü–µ–∑–∞—â–∏—Ç–Ω—ã–π –∫—Ä–µ–º", "–†–µ–ø–µ–ª–ª–µ–Ω—Ç"],
        "map": "https://www.google.com/maps/dir/Sanya+Tibet+Hotel/Dadonghai+Beach/Sanya+Bay/",
        "photos": ["photos/day1_1.jpg", "photos/day1_2.jpg"],
        "advice": "‚ö° –í–µ—á–µ—Ä–æ–º –≤ –°–∞–Ω—å—è –ë—ç–π –º–æ–≥—É—Ç –±—ã—Ç—å –∫–æ–º–∞—Ä—ã."
    },
    2: {
        "title": "–î–µ–Ω—å 2 ‚Äî –Ø–ª–æ–Ω–≥ –ë—ç–π",
        "schedule": [
            "09:00 ‚Äì –≤—ã–µ–∑–¥ –∏–∑ –æ—Ç–µ–ª—è",
            "09:40 ‚Äì –ø—Ä–∏–±—ã—Ç–∏–µ –Ω–∞ –Ø–ª–æ–Ω–≥ –ë—ç–π (—Ç–∞–∫—Å–∏ ~80 CNY)",
            "12:30 ‚Äì –æ–±–µ–¥",
            "18:00 ‚Äì –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –≤ –æ—Ç–µ–ª—å (~80 CNY)"
        ],
        "cafes": ["Beach Bar (~100 CNY)", "Fish Restaurant (~150 CNY)"],
        "budget": {"taxi": 160, "food": 120, "tickets": 0},
        "checklist": ["–ö—É–ø–∞–ª—å–Ω–∏–∫", "–û—á–∫–∏", "–®–ª—ë–ø–∞–Ω—Ü—ã"],
        "map": "https://www.google.com/maps/dir/Sanya+Tibet+Hotel/Yalong+Bay/",
        "photos": ["photos/day2_1.jpg", "photos/day2_2.jpg"],
        "advice": "‚ö° –ë–µ—Ä–∏—Ç–µ –∑–æ–Ω—Ç ‚Äì –º–∞–ª–æ —Ç–µ–Ω–∏."
    },
    3: {
        "title": "–î–µ–Ω—å 3 ‚Äî –í—É–∂–∏—á–∂–æ—É + –û—Å—Ç—Ä–æ–≤ –û–±–µ–∑—å—è–Ω",
        "schedule": [
            "08:00 ‚Äì –≤—ã–µ–∑–¥ –∏–∑ –æ—Ç–µ–ª—è",
            "09:00 ‚Äì –ø–∞—Ä–æ–º –Ω–∞ –í—É–∂–∏—á–∂–æ—É (~150 CNY)",
            "13:00 ‚Äì —Ç–∞–∫—Å–∏ –∫ –û—Å—Ç—Ä–æ–≤—É –û–±–µ–∑—å—è–Ω (~100 CNY)",
            "14:00 ‚Äì –∫–∞–Ω–∞—Ç–Ω–∞—è –¥–æ—Ä–æ–≥–∞ (~120 CNY)",
            "18:00 ‚Äì –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –≤ –æ—Ç–µ–ª—å"
        ],
        "cafes": ["Island Snack (~50 CNY)", "Seafood Cafe (~100 CNY)"],
        "budget": {"taxi": 200, "food": 100, "tickets": 270},
        "checklist": ["–§–æ—Ç–æ–∞–ø–ø–∞—Ä–∞—Ç", "–®–ª—è–ø–∞", "–£–¥–æ–±–Ω–∞—è –æ–±—É–≤—å"],
        "map": "https://www.google.com/maps/dir/Sanya+Tibet+Hotel/Wuzhizhou+Island+Wharf/Nanwan+Monkey+Island/",
        "photos": ["photos/day3_1.jpg", "photos/day3_2.jpg"],
        "advice": "‚ö° –ó–∞—Ä—è–¥–∏—Ç–µ —Ç–µ–ª–µ—Ñ–æ–Ω ‚Äì –º–Ω–æ–≥–æ —Ñ–æ—Ç–æ!"
    },
    4: {
        "title": "–î–µ–Ω—å 4 ‚Äî –ù–∞–Ω—å—à–∞–Ω—å + –ö—Ä–∞–π —Å–≤–µ—Ç–∞",
        "schedule": [
            "08:30 ‚Äì –≤—ã–µ–∑–¥ –∏–∑ –æ—Ç–µ–ª—è",
            "09:30 ‚Äì –ù–∞–Ω—å—à–∞–Ω—å (~120 CNY)",
            "13:00 ‚Äì –æ–±–µ–¥ –≤ Veggie Temple",
            "15:00 ‚Äì –ö—Ä–∞–π —Å–≤–µ—Ç–∞ (~100 CNY)",
            "19:00 ‚Äì –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –≤ –æ—Ç–µ–ª—å"
        ],
        "cafes": ["Veggie Temple (~60 CNY)", "Sea View Cafe (~90 CNY)"],
        "budget": {"taxi": 250, "food": 120, "tickets": 220},
        "checklist": ["–°–∫—Ä–æ–º–Ω–∞—è –æ–¥–µ–∂–¥–∞", "–ì–æ–ª–æ–≤–Ω–æ–π —É–±–æ—Ä"],
        "map": "https://www.google.com/maps/dir/Sanya+Tibet+Hotel/Nanshan+Temple/Tianya+Haijiao/",
        "photos": ["photos/day4_1.jpg", "photos/day4_2.jpg"],
        "advice": "‚ö° –í —Ö—Ä–∞–º–µ –∑–∞–∫—Ä—ã–≤–∞—Ç—å –ø–ª–µ—á–∏ –∏ –∫–æ–ª–µ–Ω–∏."
    },
    5: {
        "title": "–î–µ–Ω—å 5 ‚Äî Romance Park + Yanoda",
        "schedule": [
            "09:00 ‚Äì –≤—ã–µ–∑–¥ –∏–∑ –æ—Ç–µ–ª—è",
            "09:30 ‚Äì Romance Park (~280 CNY)",
            "13:00 ‚Äì —Ç–∞–∫—Å–∏ –≤ Yanoda (~100 CNY)",
            "14:00 ‚Äì –ø—Ä–æ–≥—É–ª–∫–∞ (~130 CNY)",
            "19:00 ‚Äì –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –≤ –æ—Ç–µ–ª—å"
        ],
        "cafes": ["Rainforest Cafe (~80 CNY)", "Local Dishes (~100 CNY)"],
        "budget": {"taxi": 200, "food": 120, "tickets": 410},
        "checklist": ["–£–¥–æ–±–Ω–∞—è –æ–±—É–≤—å", "–†–µ–ø–µ–ª–ª–µ–Ω—Ç", "–§–æ—Ç–æ–∞–ø–ø–∞—Ä–∞—Ç"],
        "map": "https://www.google.com/maps/dir/Sanya+Tibet+Hotel/Sanya+Romance+Park/Yanoda+Rainforest+Park/",
        "photos": ["photos/day5_1.jpg", "photos/day5_2.jpg"],
        "advice": "‚ö° –í–æ–∑—å–º–∏—Ç–µ —Ä–µ–ø–µ–ª–ª–µ–Ω—Ç."
    },
    6: {
        "title": "–î–µ–Ω—å 6 ‚Äî –ê—Ç–ª–∞–Ω—Ç–∏—Å + Phoenix Island",
        "schedule": [
            "10:00 ‚Äì –≤—ã–µ–∑–¥ –∏–∑ –æ—Ç–µ–ª—è",
            "10:30 ‚Äì –ê—Ç–ª–∞–Ω—Ç–∏—Å (~350 CNY)",
            "14:00 ‚Äì –æ–±–µ–¥",
            "16:00 ‚Äì –ø—Ä–æ–≥—É–ª–∫–∞ –ø–æ Phoenix Island",
            "20:00 ‚Äì –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –≤ –æ—Ç–µ–ª—å"
        ],
        "cafes": ["Atlantis Food Court (~120 CNY)", "Island Cafe (~150 CNY)"],
        "budget": {"taxi": 150, "food": 150, "tickets": 350},
        "checklist": ["–§–æ—Ç–æ–∞–ø–ø–∞—Ä–∞—Ç", "–õ—ë–≥–∫–∞—è –æ–¥–µ–∂–¥–∞"],
        "map": "https://www.google.com/maps/dir/Sanya+Tibet+Hotel/Atlantis+Sanya/Phoenix+Island/",
        "photos": ["photos/day6_1.jpg", "photos/day6_2.jpg"],
        "advice": "‚ö° –í–µ—á–µ—Ä–æ–º –∫—Ä–∞—Å–∏–≤–æ –¥–ª—è —Ñ–æ—Ç–æ."
    },
}

# --- –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ---
def main_menu():
    return InlineKeyboardMarkup([
        [InlineKeyboardButton("üìÖ –ü–ª–∞–Ω –ø–æ –¥–Ω—è–º", callback_data="plan_menu")],
        [InlineKeyboardButton("üå¶ –ü–æ–≥–æ–¥–∞", callback_data="weather")],
        [InlineKeyboardButton("üìä –û–±—â–∏–π –±—é–¥–∂–µ—Ç", callback_data="total_budget")],
        [InlineKeyboardButton("üí± –ö–æ–Ω–≤–µ—Ä—Ç–µ—Ä –≤–∞–ª—é—Ç", callback_data="converter")],
        [InlineKeyboardButton("üìç –ì–¥–µ —è —Å–µ–π—á–∞—Å?", callback_data="where_am_i")]
    ])

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    kb = [[KeyboardButton("üìç –û—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–æ–∫–∞—Ü–∏—é", request_location=True)]]
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π –≥–∏–¥ –ø–æ –°–∞–Ω—å–µ üå¥", reply_markup=main_menu())
    await update.message.reply_text("–ß—Ç–æ–±—ã —è –ø–æ–∫–∞–∑–∞–ª –±–ª–∏–∂–∞–π—à–∏–µ –ª–æ–∫–∞—Ü–∏–∏, –æ—Ç–ø—Ä–∞–≤—å —Å–≤–æ—é –≥–µ–æ–ø–æ–∑–∏—Ü–∏—é.",
                                    reply_markup=ReplyKeyboardMarkup(kb, resize_keyboard=True))

# --- –ü–æ–∫–∞–∑ –¥–Ω—è ---
async def show_day(update: Update, context: ContextTypes.DEFAULT_TYPE, day: int, photo_index: int = 0):
    d = days[day]
    budget = d["budget"]
    text = f"‚ú® {d['title']}\n\n" \
           f"üïê –ü–ª–∞–Ω:\n- " + "\n- ".join(d["schedule"]) + "\n\n" \
           f"üç¥ –ì–¥–µ –ø–æ–µ—Å—Ç—å:\n- " + "\n- ".join(d["cafes"]) + "\n\n" \
           f"üìä –ë—é–¥–∂–µ—Ç:\nüöñ –¢–∞–∫—Å–∏: {budget['taxi']} CNY\nüç¥ –ï–¥–∞: {budget['food']} CNY\nüéü –ë–∏–ª–µ—Ç—ã: {budget['tickets']} CNY\n" \
           f"üí∞ –ò—Ç–æ–≥–æ: {sum(budget.values())} CNY\n\n" \
           f"üéí –ß–µ–∫-–ª–∏—Å—Ç:\n- " + "\n- ".join(d["checklist"]) + "\n\n" \
           f"{d['advice']}\n\nüó∫ –ú–∞—Ä—à—Ä—É—Ç: {d['map']}"

    kb = [
        [InlineKeyboardButton("‚¨ÖÔ∏è –§–æ—Ç–æ", callback_data=f"photo_{day}_{(photo_index-1)%len(d['photos'])}"),
         InlineKeyboardButton("‚û°Ô∏è –§–æ—Ç–æ", callback_data=f"photo_{day}_{(photo_index+1)%len(d['photos'])}")],
        [InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="plan_menu")],
        [InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="home")]
    ]

    with open(d["photos"][photo_index], "rb") as photo:
        await update.callback_query.message.reply_photo(photo, caption=text, reply_markup=InlineKeyboardMarkup(kb))

# --- –û–±—â–∏–π –±—é–¥–∂–µ—Ç ---
async def total_budget(update: Update, context: ContextTypes.DEFAULT_TYPE):
    taxi = sum(d["budget"]["taxi"] for d in days.values())
    food = sum(d["budget"]["food"] for d in days.values())
    tickets = sum(d["budget"]["tickets"] for d in days.values())
    total = taxi + food + tickets
    text = f"üìä –û–±—â–∏–π –±—é–¥–∂–µ—Ç (6 –¥–Ω–µ–π):\nüöñ –¢–∞–∫—Å–∏: {taxi} CNY\nüç¥ –ï–¥–∞: {food} CNY\nüéü –ë–∏–ª–µ—Ç—ã: {tickets} CNY\nüí∞ –ò—Ç–æ–≥–æ: {total} CNY"
    await safe_edit(update.callback_query, text, [[InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="home")]])

# --- –ü–æ–≥–æ–¥–∞ ---
async def get_weather(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        res = requests.get("https://wttr.in/Sanya?format=3&lang=ru")
        text = "üå¶ –ü–æ–≥–æ–¥–∞: " + res.text
    except:
        text = "üå¶ –ü–æ–≥–æ–¥–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞."
    await safe_edit(update.callback_query, text, [[InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="home")]])

# --- –ö–æ–Ω–≤–µ—Ä—Ç–µ—Ä ---
async def converter(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await safe_edit(update.callback_query, "üí± –í–≤–µ–¥–∏ —Å—É–º–º—É –≤ CNY:", [[InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="home")]])
    context.user_data["awaiting_amount"] = True

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if context.user_data.get("awaiting_amount"):
        try:
            amount = float(update.message.text)
            uzs = amount * CNY_TO_UZS
            usd = amount * CNY_TO_USD
            await update.message.reply_text(f"üí± {amount} CNY = {uzs:,} UZS ‚âà {usd:.2f} USD")
        except:
            await update.message.reply_text("‚ö†Ô∏è –û—à–∏–±–∫–∞. –í–≤–µ–¥–∏ —á–∏—Å–ª–æ.")
        context.user_data["awaiting_amount"] = False

# --- –ì–¥–µ —è —Å–µ–π—á–∞—Å ---
def haversine(lat1, lon1, lat2, lon2):
    R = 6371
    phi1, phi2 = map(math.radians, [lat1, lat2])
    dphi = math.radians(lat2 - lat1)
    dlambda = math.radians(lon2 - lon1)
    a = math.sin(dphi/2)**2 + math.cos(phi1)*math.cos(phi2)*math.sin(dlambda/2)**2
    return R*2*math.atan2(math.sqrt(a), math.sqrt(1-a))

async def location_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_loc = update.message.location
    distances = {name: haversine(user_loc.latitude, user_loc.longitude, lat, lon) for name, (lat, lon) in locations.items()}
    nearest = min(distances, key=distances.get)
    await update.message.reply_text(f"üìç –ë–ª–∏–∂–∞–π—à–∞—è –ª–æ–∫–∞—Ü–∏—è: {nearest} ({distances[nearest]:.1f} –∫–º)")

# --- Safe edit ---
async def safe_edit(query, text, kb):
    try:
        await query.message.edit_text(text, reply_markup=InlineKeyboardMarkup(kb))
    except:
        try:
            await query.message.delete()
        except:
            pass
        await query.message.reply_text(text, reply_markup=InlineKeyboardMarkup(kb))

# --- Callback ---
async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    data = update.callback_query.data
    if data == "home":
        await safe_edit(update.callback_query, "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", main_menu().inline_keyboard)
    elif data == "plan_menu":
        kb = [[InlineKeyboardButton(days[i]["title"], callback_data=f"plan_{i}")] for i in days]
        kb.append([InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="home")])
        await safe_edit(update.callback_query, "üìÖ –í—ã–±–µ—Ä–∏ –¥–µ–Ω—å:", kb)
    elif data.startswith("plan_"):
        day = int(data.split("_")[1])
        await show_day(update, context, day)
    elif data.startswith("photo_"):
        _, d, idx = data.split("_")
        await show_day(update, context, int(d), int(idx))
    elif data == "weather":
        await get_weather(update, context)
    elif data == "total_budget":
        await total_budget(update, context)
    elif data == "converter":
        await converter(update, context)
    elif data == "where_am_i":
        await update.callback_query.message.reply_text("üìç –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å–≤–æ—é –ª–æ–∫–∞—Ü–∏—é –∫–Ω–æ–ø–∫–æ–π –Ω–∏–∂–µ ‚¨áÔ∏è")

# --- MAIN ---
def main():
    app = Application.builder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CallbackQueryHandler(button_handler))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    app.add_handler(MessageHandler(filters.LOCATION, location_handler))
    app.run_polling()

if __name__ == "__main__":
    main()
